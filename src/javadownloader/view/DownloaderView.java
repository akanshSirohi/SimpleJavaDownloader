/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javadownloader.view;

import java.io.File;
import javadownloader.task.DownloaderThread;
import javax.swing.JFileChooser;

/**
 *
 * @author Filippo-TheAppExpert
 */
public class DownloaderView extends javax.swing.JFrame implements DownloaderThread.DownloadListener {

    /**
     * Creates new form DownloaderView
     */
    public DownloaderView() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Downloader");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addressBar = new javax.swing.JTextField();
        downloadBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoPanel = new javax.swing.JTextArea();
        progressStatus = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        downloadBtn.setText("Download");
        downloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadBtnActionPerformed(evt);
            }
        });

        infoPanel.setEditable(false);
        infoPanel.setColumns(20);
        infoPanel.setRows(5);
        jScrollPane1.setViewportView(infoPanel);

        progressStatus.setStringPainted(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addressBar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(downloadBtn))
                    .addComponent(progressStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(downloadBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void downloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadBtnActionPerformed
        String url = addressBar.getText();
        
        if(checkValidURL(url)) {            
            startDownload(url);            
            System.out.println("Start Downloading");
        } else {
            System.err.println("Download cannot start");
        }
        
    }//GEN-LAST:event_downloadBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressBar;
    private javax.swing.JButton downloadBtn;
    private javax.swing.JTextArea infoPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar progressStatus;
    // End of variables declaration//GEN-END:variables

    private boolean checkValidURL(String url) {
        return url.startsWith("http");
    }

    private void startDownload(String url) {
        DownloaderThread download = new DownloaderThread(DownloaderView.this, url);
        download.start();
    }

    @Override
    public void onDownloadStart() {
        this.infoPanel.append("Download Started!\n");
    }

    @Override
    public void onDownloadProgress(String description, int value) {
        this.infoPanel.append(description +"\n");
        this.progressStatus.setValue(value);
    }

    @Override
    public void onDownloadComplete() {
        this.infoPanel.append("Download Complete!\n");
    }

    @Override
    public void onDownloadFailed(String errorMsg) {
        this.infoPanel.append("Download Process Failed! "+ errorMsg+" ...\n");
    }

    @Override
    public String showSaveDialog(File fileToSave) {
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Choose directory to ave " + fileToSave.getName());
        
        fileChooser.setSelectedFile(fileToSave);
    
        int userSelection = fileChooser.showSaveDialog(DownloaderView.this);
        if(userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSaveInPreferredDirectory = fileChooser.getSelectedFile();
            return fileToSaveInPreferredDirectory.getAbsolutePath();           
        }
        return null;
    }
}
